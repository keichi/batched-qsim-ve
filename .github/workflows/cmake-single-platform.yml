name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build-openmp:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        python3 -m pip install --user nanobind

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  build-veda:
    runs-on: ubuntu-latest

    container:
      image: rockylinux/rockylinux:8.10-ubi

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        dnf install -y https://sxauroratsubasa.sakura.ne.jp/repos/TSUBASA-soft-release-ve3-3.0-1.noarch.rpm
        dnf install -y --setopt=install_weak_deps=0 nec-nc++-inst nec-nc++-5.3.0 nec-nc++-compat-shared-devel-5.3.0 glibc-ve3-devel libsysve-ve3-devel libgcc-ve3-static veoffload-veda veoffload-aveo
        dnf install -y gcc-c++ cmake git python39 python39-pip
        python3 -m pip install -U pip
        python3 -m pip install --user veda nanobind

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  build-custatevec:
    runs-on: ubuntu-latest

    container:
      image: nvidia/cuda:12.9.0-devel-ubuntu22.04

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        apt-get update && apt-get install -y git cmake python3 cuquantum-cuda-12
        python3 -m pip install --user nanobind

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
